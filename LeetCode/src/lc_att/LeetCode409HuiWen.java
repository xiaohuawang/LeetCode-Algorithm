package lc_att;

public class LeetCode409HuiWen {

	String yangyang="sile";
	
//	public String longestPalindrome(String s) {
//	    if(s==null || s.length()<=1)
//	        return s;
//	 
//	    int len = s.length();
//	    int maxLen = 1;
//	    boolean [][] dp = new boolean[len][len];
//	 
//	    String longest = null;
//	    for(int l=0; l<s.length(); l++){
//	        for(int i=0; i<len-l; i++){
//	            int j = i+l;
//	            if(s.charAt(i)==s.charAt(j) && (j-i<=2||dp[i+1][j-1])){
//	                dp[i][j]=true;
//	 
//	                if(j-i+1>maxLen){
//	                   maxLen = j-i+1; 
//	                   longest = s.substring(i, j+1);
//	                }
//	            }
//	        }
//	    }
//	 
//	    return longest;
//	}
	
	public int longestPalindrome(String s) {
		// å°†å­—ç¬¦ä¸²sè½¬æ?¢æˆ?å­—ç¬¦æ•°ç»„chars[]
		char chars[] = s.toCharArray();
		// åˆ†åˆ«ç”³æ˜Žæ•°ç»„ä¿?å­˜å?„ä¸ªå¤§å°?å†™å­—æ¯?ï¼ˆå…±26ä¸ªï¼‰å‡ºçŽ°çš„æ¬¡æ•°
		int lower[] = new int[26];
		int upper[] = new int[26];
		// ä¿?å­˜å­—ç¬¦æ•°ç»„ä¸­å­—ç¬¦å‡ºçŽ°å¥‡æ•°æ¬¡çš„æ¬¡æ•°
		int odds = 0;
		// å¾ªçŽ¯å°†charsæ•°ç»„å¯¹åº”å¤§å°?å†™å­—ç¬¦å‡ºçŽ°æ¬¡æ•°ä¿?å­˜åœ¨å¯¹åº”æ¬¡æ•°æ•°ç»„ä¸­
		for (int i = 0; i < s.length(); i++) {
			// å¦‚æžœcharsæ•°ç»„ä¸­å­—ç¬¦ä¸ºå¤§å†™å­—ç¬¦
			if (chars[i] < 'a') {
				// æŒ‰ç…§å­—ç¬¦å¤§å°?é¡ºåº?å¯¹åº”ä¿?å­˜å¤§å†™å­—ç¬¦å‡ºçŽ°æ¬¡æ•°
				upper[chars[i] - 'A']++;
			}
			// å¦‚æžœcharsæ•°ç»„ä¸­å­—ç¬¦ä¸ºå°?å†™å­—ç¬¦
			else {
				// æŒ‰ç…§å­—ç¬¦å¤§å°?é¡ºåº?å¯¹åº”ä¿?å­˜å°?å†™å­—ç¬¦å‡ºçŽ°æ¬¡æ•°
				lower[chars[i] - 'a']++;
			}
		}
		
		System.out.print("lower=  ");
		for(int i:lower){
			System.out.print(i+" ");
		}
		System.out.println();
		
		
		System.out.print("upper=  ");
		for(int i:upper){
			System.out.print(i+" ");
		}
		System.out.println();
		
		// é??åŽ†ä¿?å­˜å¤§å°?å†™å­—ç¬¦å‡ºçŽ°æ¬¡æ•°çš„æ•°ç»„
		for (int j = 0; j < 26; j++) {
			// å¦‚æžœå¤§å†™å­—ç¬¦ä¸­å­˜åœ¨å‡ºçŽ°æ¬¡æ•°ä¸ºå¥‡æ•°æ¬¡çš„å­—ç¬¦ï¼Œodds+1
			if (upper[j] % 2 != 0)
				odds++;
			// å¦‚æžœå°?å†™å­—ç¬¦ä¸­å­˜åœ¨å‡ºçŽ°æ¬¡æ•°ä¸ºå¥‡æ•°æ¬¡çš„å­—ç¬¦ï¼Œodds+1
			if (lower[j] % 2 != 0)
				odds++;
		}
		// å¦‚æžœsä¸­æ²¡æœ‰å‡ºçŽ°æ¬¡æ•°ä¸ºå¥‡æ•°çš„å­—ç¬¦ï¼Œè¿”å›žå­—ç¬¦ä¸²é•¿åº¦å?³å?¯
		if (odds == 0)
			return s.length();
		// å?¦åˆ™ï¼Œè¿”å›žå­—ç¬¦ä¸²é•¿åº¦-å‡ºçŽ°æ¬¡æ•°ä¸ºå¥‡æ•°çš„å­—ç¬¦ä¸ªæ•°+1
		// å?³ä¿?ç•™å‡ºçŽ°æœ€å¤§å¥‡æ•°æ¬¡æ•°çš„å­—ç¬¦
		else
			return s.length() - odds + 1;

	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		LeetCode409HuiWen lc = new LeetCode409HuiWen();
		String s = "abccccdd";
		int res = lc.longestPalindrome(s);
		System.out.println("res= " + res);

	}

}
